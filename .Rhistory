outcome_total
# Carga de datos
setwd("D:\\Desktop\\Proyecto_Long_COVID\\")
dataset_cov = read.csv("Resultados\\04.01.23\\final_cov_040123.csv")
dataset_cov = dataset_cov[c("Caso", "Edad", "Sexo")]
dataset_corr = read.csv("Resultados\\04.01.23\\final_dataset_corr.csv")
dataset = merge(dataset_corr, dataset_cov, by = "Caso")
# Adultos
dataset = dataset %>% filter(Edad >= 18)
dataset$Sexo = as.factor(dataset$Sexo)
dataset$d = as.factor(dataset$d)
# Outcome
dataset$outcome = dataset$death_binaria
dataset$outcome[dataset$outcome == 1] = "Fallecido"
for (i in 1:nrow(dataset)) {
if (dataset$d[i] == 0) {
dataset$outcome[i] = "Censurado"
}
}
dataset$outcome[dataset$outcome == 0] = "Alta"
# Pacientes criticos cronicos
cronicos = dataset %>%  filter(t >= 21)
# Pacientes criticos
criticos = dataset %>%  filter(t < 21)
normal = data.frame(Variable = c("Edad", "ICU_LoS", "Onset_Adm"),
Skewness = c(NA,NA,NA), Kurtosis=c(NA,NA,NA),
W= c(NA,NA,NA), p_value= c(NA, NA,NA))
normal$Skewness[1] = skewness(dataset$Edad)
normal$Kurtosis[1] = kurtosis(dataset$Edad)
normal$W[1] = as.numeric(shapiro.test(dataset$Edad)$statistic)
normal$p_value[1] = as.numeric(shapiro.test(dataset$Edad)$p.value)
normal$Skewness[2] = skewness(dataset$t)
normal$Kurtosis[2] = kurtosis(dataset$t)
normal$W[2] = as.numeric(shapiro.test(dataset$t)$statistic)
normal$p_value[2] = as.numeric(shapiro.test(dataset$t)$p.value)
normal$Skewness[3] = skewness(dataset$t_OS)
normal$Kurtosis[3] = kurtosis(dataset$t_OS)
normal$W[3] = as.numeric(shapiro.test(dataset$t_OS)$statistic)
normal$p_value[3] = as.numeric(shapiro.test(dataset$t_OS)$p.value)
# Resumen descriptivo (variables continuas)
continuas = data.frame(Variable = c("Edad", "ICU_LoS", "Onset_Adm"),
Mediana = c(NA, NA, NA),
Q1 = c(NA, NA, NA),
Q3 = c(NA, NA, NA))
continuas$Mediana[1] = median(dataset$Edad)
continuas$Q1[1] = quantile(dataset$Edad, c(0.25), type = 6)
continuas$Q3[1] = quantile(dataset$Edad, c(0.75), type = 6)
continuas$Mediana[2] = median(dataset$t)
continuas$Q1[2] = quantile(dataset$t, c(0.25), type = 6)
continuas$Q3[2] = quantile(dataset$t, c(0.75), type = 6)
continuas$Mediana[3] = median(dataset$t_OS)
continuas$Q1[3] = quantile(dataset$t_OS, c(0.25), type = 6)
continuas$Q3[3] = quantile(dataset$t_OS, c(0.75), type = 6)
continuas_cronicos = data.frame(Variable = c("Edad", "ICU_LoS", "Onset_Adm"),
Mediana = c(NA, NA, NA),
Q1 = c(NA, NA, NA),
Q3 = c(NA, NA, NA))
continuas_cronicos$Mediana[1] = median(cronicos$Edad)
continuas_cronicos$Q1[1] = quantile(cronicos$Edad, c(0.25), type = 6)
continuas_cronicos$Q3[1] = quantile(cronicos$Edad, c(0.75), type = 6)
continuas_cronicos$Mediana[2] = median(cronicos$t)
continuas_cronicos$Q1[2] = quantile(cronicos$t, c(0.25), type = 6)
continuas_cronicos$Q3[2] = quantile(cronicos$t, c(0.75), type = 6)
continuas_cronicos$Mediana[3] = median(cronicos$t_OS)
continuas_cronicos$Q1[3] = quantile(cronicos$t_OS, c(0.25), type = 6)
continuas_cronicos$Q3[3] = quantile(cronicos$t_OS, c(0.75), type = 6)
continuas_criticos = data.frame(Variable = c("Edad", "ICU_LoS", "Onset_Adm"),
Mediana = c(NA, NA, NA),
Q1 = c(NA, NA, NA),
Q3 = c(NA, NA, NA))
continuas_criticos$Mediana[1] = median(criticos$Edad)
continuas_criticos$Q1[1] = quantile(criticos$Edad, c(0.25), type = 6)
continuas_criticos$Q3[1] = quantile(criticos$Edad, c(0.75), type = 6)
continuas_criticos$Mediana[2] = median(criticos$t)
continuas_criticos$Q1[2] = quantile(criticos$t, c(0.25), type = 6)
continuas_criticos$Q3[2] = quantile(criticos$t, c(0.75), type = 6)
continuas_criticos$Mediana[3] = median(criticos$t_OS)
continuas_criticos$Q1[3] = quantile(criticos$t_OS, c(0.25), type = 6)
continuas_criticos$Q3[3] = quantile(criticos$t_OS, c(0.75), type = 6)
descriptivo_continuas = list(continuas, continuas_cronicos, continuas_criticos)
names(descriptivo_continuas) = c("Continuas", "Crónicos", "Críticos")
rm(continuas, continuas_cronicos, continuas_criticos)
# Resumen descriptivo (Sexo)
sexo_total = plyr::count(dataset$Sexo)
colnames(sexo_total) = c("Sexo", "Freq")
sexo_total$Share = (sexo_total$Freq/sum(sexo_total$Freq))*100
sexo_cronicos = plyr::count(cronicos$Sexo)
colnames(sexo_cronicos) = c("Sexo", "Freq")
sexo_cronicos$Share = (sexo_cronicos$Freq/sum(sexo_cronicos$Freq))*100
sexo_criticos = plyr::count(criticos$Sexo)
colnames(sexo_criticos) = c("Sexo", "Freq")
sexo_criticos$Share = (sexo_criticos$Freq/sum(sexo_criticos$Freq))*100
descriptivo_sexo = list(sexo_total, sexo_cronicos, sexo_criticos)
names(descriptivo_sexo) = c("Total", "Crónicos", "Críticos")
rm(sexo_total, sexo_criticos, sexo_cronicos)
outcome_total = plyr::count(dataset$outcome)
colnames(outcome_total) = c("Outcome", "Freq")
outcome_total$Share = (outcome_total$Freq/sum(outcome_total$Freq))*100
outcome_cronicos = plyr::count(cronicos$outcome)
outcome_criticos = plyr::count(criticos$outcome)
outcome_criticos = plyr::count(criticos$outcome)
colnames(outcome_criticos) = c("Outcome", "Freq")
outcome_criticos$Share = (outcome_criticos$Freq/sum(outcome_criticos$Freq))*100
# Resumen descriptivo (outcome)
outcome_total = plyr::count(dataset$outcome)
colnames(outcome_total) = c("Outcome", "Freq")
outcome_total$Share = (outcome_total$Freq/sum(outcome_total$Freq))*100
outcome_cronicos = plyr::count(cronicos$outcome)
colnames(outcome_cronicos) = c("Outcome", "Freq")
outcome_cronicos$Share = (outcome_cronicos$Freq/sum(outcome_cronicos$Freq))*100
outcome_criticos = plyr::count(criticos$outcome)
colnames(outcome_criticos) = c("Outcome", "Freq")
outcome_criticos$Share = (outcome_criticos$Freq/sum(outcome_criticos$Freq))*100
descriptivo_outcome = list(outcome_total, outcome_cronicos, outcome_criticos)
names(descriptivo_censura) = c("Total", "Crónicos", "Críticos")
rm(outcome_total, outcome_cronicos, outcome_criticos)
descriptivo_outcome
descriptivo_outcome = list(outcome_total, outcome_cronicos, outcome_criticos)
names(descriptivo_censura) = c("Total", "Crónicos", "Críticos")
descriptivo_outcome = list(outcome_total, outcome_cronicos, outcome_criticos)
names(descriptivo_outcome) = c("Total", "Crónicos", "Críticos")
descriptivo_continuas
descriptivo_sexo
descriptivo_outcome
normal
descriptivo_continuas
# Edad
sexo_data_m = dataset %>% filter(Sexo == 0)
sexo_data_f = dataset %>% filter(Sexo == 1)
sexo_data_m
# Edad
sexo_data_m = (dataset %>% filter(Sexo == 0))[c("Edad", "Sexo")]
sexo_data_f = (dataset %>% filter(Sexo == 1))[c("Edad", "Sexo")]
sexo_data_m
sexo_data_f
# Edad
sexo_data_m = (dataset %>% filter(Sexo == 0))[c("Edad")]
sexo_data_f = (dataset %>% filter(Sexo == 1))[c("Edad")]
colnames(sexo_data_m) = "Male"
colnames(sexo_data_f) = "Female"
sexo_data_m
colnames(sexo_data_f)
wilcox.test(sexo_data_m, sexo_data_f)
# Edad
sexo_data_m = as.vector((dataset %>% filter(Sexo == 0))[c("Edad")])
sexo_data_f = as.vector((dataset %>% filter(Sexo == 1))[c("Edad")])
names(sexo_data_m) = "Male"
names(sexo_data_f) = "Female"
Male
name(sexo_data_m) = "Male"
# Edad
sexo_data_m = as.vector((dataset %>% filter(Sexo == 0))[c("Edad")])
sexo_data_f = as.vector((dataset %>% filter(Sexo == 1))[c("Edad")])
sexo_data_f = as.vector((dataset %>% filter(Sexo == 1))$Edad)
# Edad
sexo_data_m = as.vector((dataset %>% filter(Sexo == 0))$Edad)
name(sexo_data_m) = "Male"
names(sexo_data_m) = "Male"
names(sexo_data_f) = "Female"
names(sexo_data_m) = "Male"
names(sexo_data_f) = "Female"
# Edad
sexo_data_m = as.vector((dataset %>% filter(Sexo == 0))$Edad)
sexo_data_f = as.vector((dataset %>% filter(Sexo == 1))$Edad)
wilcox.test(sexo_data_m, sexo_data_f)
mann_whitney = data.frame(Variable = c("Age", "LoS ICU", "SO_ICU"),
Sexo_W = c(NA, NA, NA), Sexo_p = c(NA, NA, NA),
Cronico_W = c(NA, NA, NA), Cronico_p = c(NA, NA, NA))
# Edad
sexo_edad_m = as.vector((dataset %>% filter(Sexo == 0))$Edad)
sexo_edad_f = as.vector((dataset %>% filter(Sexo == 1))$Edad)
wilcox_sexo_edad = wilcox.test(sexo_data_m, sexo_data_f)
wilcox_sexo_edad = wilcox.test(sexo_data_m, sexo_data_f)
mann_whitney$Sexo_W[1] = wilcox_sexo_edad$statistic
mann_whitney$Sexo_p[1] = wilcox_sexo_edad$p.value
wilcox_sexo_edad
mann_whitney
# LoS ICU
sexo_LoS_m = as.vector((dataset %>% filter(Sexo == 0))$t)
sexo_LoS_f = as.vector((dataset %>% filter(Sexo == 1))$t)
# LoS ICU
sexo_LoS_m = as.vector((dataset %>% filter(Sexo == 0))$t)
sexo_LoS_f = as.vector((dataset %>% filter(Sexo == 1))$t)
wilcox_sexo_LoS = wilcox.test(sexo_LoS_m, sexo_LoS_f)
mann_whitney$Sexo_W[2] = wilcox_sexo_LoS$statistic
mann_whitney$Sexo_p[2] = wilcox_sexo_LoS$p.value
mann_whitney
wilcox_sexo_LoS
# Time from SO to ICU admission
sexo_OS_m = as.vector((dataset %>% filter(Sexo == 0))$t_OS)
sexo_OS_f = as.vector((dataset %>% filter(Sexo == 1))$t_OS)
sexo_OS_m
# Time from SO to ICU admission
sexo_OS_m = as.vector((dataset %>% filter(Sexo == 0))$t_OS)
sexo_OS_f = as.vector((dataset %>% filter(Sexo == 1))$t_OS)
wilcox_sexo_OS = wilcox.test(sexo_OS_m, sexo_OS_f)
mann_whitney$Sexo_W[3] = wilcox_sexo_OS$statistic
mann_whitney$Sexo_p[3] = wilcox_sexo_OS$p.value
mann_whitney
# Edad
cronicos_edad = as.vector(cronicos$Edad)
criticos_edad = as.vector(criticos$Edad)
# Edad
cronicos_edad = as.vector(cronicos$Edad)
criticos_edad = as.vector(criticos$Edad)
wilcox_cc_edad = wilcox.test(cronicos_edad, criticos_edad)
mann_whitney$Cronico_W[1] = wilcox_cc_edad$statistic
mann_whitney$Cronico_p[1] = wilcox_cc_edad$p.value
mann_whitney
# LoS ICU
cronicos_LoS = as.vector(cronicos$t)
criticos_LoS = as.vector(criticos$t)
# Time from SO to ICU admission
cronicos_SO = as.vector(cronicos$t_OS)
criticos_SO = as.vector(criticos$t_OS)
wilcox_cc_SO = wilcox.test(cronicos_SO, criticos_SO)
mann_whitney$Cronico_W[3] = wilcox_cc_SO$statistic
mann_whitney$Cronico_p[3] = wilcox_cc_SO$p.value
mann_whitney
wilcox_cc_LoS = wilcox.test(cronicos_LoS, criticos_LoS)
mann_whitney$Cronico_W[2] = wilcox_cc_LoS$statistic
mann_whitney$Cronico_p[2] = wilcox_cc_LoS$p.value
mann_whitney
View(mann_whitney)
data_frame <- read.csv("https://goo.gl/j6lRXD")
View(data_frame)
rm(data_frame)
chi_2 = data.frame(Variable = c("Sexo", "Cronico", "Outcome"),
Sexo_st = c(NA, NA, NA),
Sexo_df = c(NA, NA, NA),
Sexo_p = c(NA, NA, NA))
chi_2
chi_2 = data.frame(Variable = c("Sexo", "Cronico", "Outcome"),
Sexo_st = c(NA, NA, NA), Sexo_df = c(NA, NA, NA), Sexo_p = c(NA, NA, NA),
Cro_st = c(NA, NA, NA), Cro_df = c(NA, NA, NA), Cro_p = c(NA, NA, NA),
Outc_st = c(NA, NA, NA), Outc_df = c(NA, NA, NA), Outc_p = c(NA, NA, NA))
# Variable binaria (críticos y críticos crónicos)
dataset$Cronico = NA
# Variable binaria (críticos y críticos crónicos)
dataset$Cronico = NA
for (i in 1:nrow(dataset)) {
if (dataset$t[i] >= 21) {
dataset$Cronico[i] = "Crónico"
}else{
dataset$Cronico[i] = "Crítico"
}
}
View(dataset)
# Crónico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_sexo_cronico
chi_sexo_cronico$parameter
# Crónico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_2$Sexo_st[2] = chi_sexo_cronico$statistic
chi_2$Sexo_df[2] = chi_sexo_cronico$parameter
chi_2$Sexo_p[2] chi_sexo_cronico$p.value
chi_2$Sexo_df[2] = as.numeric(chi_sexo_cronico$parameter)
chi_2$Sexo_p[2] chi_sexo_cronico$p.value
chi_sexo_cronico$p.value
chi_2$Sexo_df[2] = chi_sexo_cronico$parameter
# Crónico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_2$Sexo_st[2] = chi_sexo_cronico$statistic
chi_2$Sexo_df[2] = chi_sexo_cronico$parameter
chi_2$Sexo_p[2] = chi_sexo_cronico$p.value
chi_2
# Desenlace
chi_sexo_outcome = chisq.test(dataset$Sexo, dataset$outcome)
chi_2$Sexo_st[3] = chi_sexo_outcome$statistic
chi_2$Sexo_df[3] = chi_sexo_outcome$parameter
chi_2$Sexo_p[3] = chi_sexo_outcome$p.value
chi_2
# Desenlace
chi_cronico_outcome = chisq.test(dataset$Cronico, dataset$outcome)
chi_2$Cro_st[3] = chi_cronico_outcome$statistic
chi_2$Cro_df[3] = chi_cronico_outcome$parameter
chi_2$Cro_p[3] = chi_cronico_outcome$p.value
chi_2
# Sexo
chi_cronico_sexo = chisq.test(dataset$Cronico, dataset$Sexo)
chi_2$Cro_st[1] = chi_cronico_sexo$statistic
chi_2$Cro_df[1] = chi_cronico_sexo$parameter
chi_2$Cro_p[1] = chi_cronico_sexo$p.value
chi_2
chisq.test(dataset$Cronico, dataset$Sexo)
chisq.test(dataset$Sexo, dataset$Cronico)
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_2$Sexo_st[2] = chi_sexo_cronico$statistic
chi_2$Sexo_df[2] = chi_sexo_cronico$parameter
chi_2$Sexo_p[2] = chi_sexo_cronico$p.value
# Desenlace
chi_sexo_outcome = chisq.test(dataset$Sexo, dataset$outcome)
chi_2$Sexo_st[3] = chi_sexo_outcome$statistic
chi_2$Sexo_df[3] = chi_sexo_outcome$parameter
chi_2$Sexo_p[3] = chi_sexo_outcome$p.value
chi_cronico_sexo = chisq.test(dataset$Cronico, dataset$Sexo)
chi_2$Cro_st[1] = chi_cronico_sexo$statistic
chi_2$Cro_df[1] = chi_cronico_sexo$parameter
chi_2$Cro_p[1] = chi_cronico_sexo$p.value
# Desenlace
chi_cronico_outcome = chisq.test(dataset$Cronico, dataset$outcome)
chi_2$Cro_st[3] = chi_cronico_outcome$statistic
chi_2$Cro_df[3] = chi_cronico_outcome$parameter
chi_2$Cro_p[3] = chi_cronico_outcome$p.value
chi_2
chisq.test(dataset$Cronico, dataset$Sexo)
chisq.test(dataset$Sexo, dataset$Cronico, )
hisq.test(dataset$Sexo, dataset$Cronico)
chisq.test(dataset$Sexo, dataset$Cronico)
# Crónico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_sexo_cronico
chi_sexo_cronico$statistic
chi_sexo_cronico$parameter
chi_sexo_cronico$p.value
chi_2 = data.frame(Variable = c("Sexo", "Cronico", "Outcome"),
Sexo_st = c(NA, NA, NA), Sexo_df = c(NA, NA, NA), Sexo_p = c(NA, NA, NA),
Cro_st = c(NA, NA, NA), Cro_df = c(NA, NA, NA), Cro_p = c(NA, NA, NA),
Outc_st = c(NA, NA, NA), Outc_df = c(NA, NA, NA), Outc_p = c(NA, NA, NA))
# Crónico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_2$Sexo_st[2] = chi_sexo_cronico$statistic
chi_2$Sexo_df[2] = chi_sexo_cronico$parameter
chi_2$Sexo_p[2] = chi_sexo_cronico$p.value
chi_2
# Desenlace
chi_sexo_outcome = chisq.test(dataset$Sexo, dataset$outcome)
chi_2$Sexo_st[3] = chi_sexo_outcome$statistic
chi_2$Sexo_df[3] = chi_sexo_outcome$parameter
chi_2$Sexo_p[3] = chi_sexo_outcome$p.value
chi_2
# Sexo
chi_cronico_sexo = chisq.test(dataset$Cronico, dataset$Sexo)
# Sexo
chi_cronico_sexo = chisq.test(dataset$Cronico, dataset$Sexo)
chi_2$Cro_st[1] = chi_cronico_sexo$statistic
chi_2$Cro_df[1] = chi_cronico_sexo$parameter
chi_2$Cro_p[1] = chi_cronico_sexo$p.value
chi_2
# Desenlace
chi_cronico_outcome = chisq.test(dataset$Cronico, dataset$outcome)
chi_2$Cro_st[3] = chi_cronico_outcome$statistic
chi_2$Cro_df[3] = chi_cronico_outcome$parameter
chi_2$Cro_p[3] = chi_cronico_outcome$p.value
chi_2
# Sexo
chi_outcome_sexo = chisq.test(dataset$outcome, dataset$Sexo)
chi_2$Outc_st[1] = chi_outcome_sexo$statistic
chi_2$Outc_df[1] = chi_outcome_sexo$parameter
chi_2$Outc_p[1] = chi_outcome_sexo$p.value
chi_2
# Sexo
chi_outcome_sexo = chisq.test(dataset$outcome, dataset$Sexo)
chi_2$Outc_st[1] = chi_outcome_sexo$statistic
chi_2$Outc_df[1] = chi_outcome_sexo$parameter
chi_2$Outc_p[1] = chi_outcome_sexo$p.value
# Cronico
chi_outcome_cronico = chisq.test(dataset$outcome, dataset$Cronico)
chi_2$Outc_st[2] = chi_outcome_cronico$statistic
chi_2$Outc_df[2] = chi_outcome_cronico$parameter
chi_2$Outc_p[2] = chi_outcome_cronico$p.value
chi_2
View(chi_2)
chi_2 = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
st = c(NA, NA, NA),
df = c(NA, NA, NA),
valor_p = c(NA, NA, NA))
# Sexo - cronico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_2$st[1] = chi_sexo_cronico$statistic
chi_2$df[1] = chi_sexo_cronico$parameter
chi_2$p[1] = chi_sexo_cronico$p.value
# Sexo - outcome
chi_sexo_outcome = chisq.test(dataset$Sexo, dataset$outcome)
chi_2$st[2] = chi_sexo_outcome$statistic
chi_2$df[2] = chi_sexo_outcome$parameter
chi_2$p[2] = chi_sexo_outcome$p.value
# Cronico-outcome
chi_cronico_outcome = chisq.test(dataset$Cronico, dataset$outcome)
chi_2$st[3] = chi_cronico_outcome$statistic
chi_2$df[3] = chi_cronico_outcome$parameter
chi_2$p[3] = chi_cronico_outcome$p.value
chi_2 = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
st = c(NA, NA, NA),
df = c(NA, NA, NA),
p = c(NA, NA, NA))
# Sexo - cronico
chi_sexo_cronico = chisq.test(dataset$Sexo, dataset$Cronico)
chi_2$st[1] = chi_sexo_cronico$statistic
chi_2$df[1] = chi_sexo_cronico$parameter
chi_2$p[1] = chi_sexo_cronico$p.value
# Sexo - outcome
chi_sexo_outcome = chisq.test(dataset$Sexo, dataset$outcome)
chi_2$st[2] = chi_sexo_outcome$statistic
chi_2$df[2] = chi_sexo_outcome$parameter
chi_2$p[2] = chi_sexo_outcome$p.value
# Cronico-outcome
chi_cronico_outcome = chisq.test(dataset$Cronico, dataset$outcome)
chi_2$st[3] = chi_cronico_outcome$statistic
chi_2$df[3] = chi_cronico_outcome$parameter
chi_2$p[3] = chi_cronico_outcome$p.value
################################
## 1.8. Fisher's exact test   ##
################################
fisher = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
st = c(NA, NA, NA),
df = c(NA, NA, NA),
p = c(NA, NA, NA))
# Sexo - cronico
fisher_sexo_cronico = fisher.test(dataset$Sexo, dataset$Cronico)
fisher$st[1] = fisher_sexo_cronico$statistic
fisher$df[1] = fisher_sexo_cronico$parameter
################################
## 1.8. Fisher's exact test   ##
################################
fisher = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
st = c(NA, NA, NA),
df = c(NA, NA, NA),
p = c(NA, NA, NA))
# Sexo - cronico
fisher_sexo_cronico = fisher.test(dataset$Sexo, dataset$Cronico)
fisher$st[1] = fisher_sexo_cronico$statistic
fisher$df[1] = fisher_sexo_cronico$parameter
# Sexo - cronico
fisher_sexo_cronico = fisher.test(dataset$Sexo, dataset$Cronico)
fisher_sexo_cronico
fisher_sexo_cronico$p.value
fisher_sexo_cronico$conf.int
fisher_sexo_cronico$estimate
fisher = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
p = c(NA, NA, NA),
odds_ratio = c(NA, NA, NA),
ci = c(NA, NA, NA))
fisher$ci[1] = fisher_sexo_cronico$conf.int
fisher_sexo_cronico$conf.int
fisher$ci[1] = fisher_sexo_cronico$conf.int[1,2]
fisher$ci[1] = fisher_sexo_cronico$conf.int[1]
fisher_sexo_cronico$conf.int[1]
fisher$ci_2[1] = fisher_sexo_cronico$conf.int[2]
fisher_cronico_outcome = fisher.test(dataset$Cronico, dataset$outcome)
fisher$p[3] = fisher_cronico_outcome$p.value
fisher$odds_ratio[3] = fisher_cronico_outcome$estimate
fisher$ci_1[3] = fisher_cronico_outcome$conf.int[1]
fisher$ci_2[3] = fisher_cronico_outcome$conf.int[2]
################################
## 1.8. Fisher's exact test   ##
################################
fisher = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
p = c(NA, NA, NA),
odds_ratio = c(NA, NA, NA),
ci_1 = c(NA, NA, NA),
ci_2 = c(NA, NA, NA))
# Sexo - cronico
fisher_sexo_cronico = fisher.test(dataset$Sexo, dataset$Cronico)
fisher$p[1] = fisher_sexo_cronico$p.value
fisher$odds_ratio[1] = fisher_sexo_cronico$estimate
fisher$ci_1[1] = fisher_sexo_cronico$conf.int[1]
fisher$ci_2[1] = fisher_sexo_cronico$conf.int[2]
# Sexo - outcome
fisher_sexo_outcome = fisher.test(dataset$Sexo, dataset$outcome)
fisher$p[2] = fisher_sexo_outcome$p.value
fisher$odds_ratio[2] = fisher_sexo_outcome$estimate
fisher$ci_1[2] = fisher_sexo_outcome$conf.int[1]
fisher$ci_2[2] = fisher_sexo_outcome$conf.int[2]
# Sexo - cronico
fisher_sexo_cronico = fisher.test(dataset$Sexo, dataset$Cronico)
fisher$p[1] = fisher_sexo_cronico$p.value
fisher$odds_ratio[1] = fisher_sexo_cronico$estimate
fisher$ci_1[1] = fisher_sexo_cronico$conf.int[1]
fisher$ci_2[1] = fisher_sexo_cronico$conf.int[2]
# Sexo - outcome
fisher_sexo_outcome = fisher.test(dataset$Sexo, dataset$outcome)
fisher$p[2] = fisher_sexo_outcome$p.value
fisher$odds_ratio[2] = fisher_sexo_outcome$estimate
fisher_sexo_outcome
fisher$odds_ratio[3] = fisher_cronico_outcome$estimate
fisher_sexo_outcome$alternative
################################
## 1.8. Fisher's exact test   ##
################################
fisher = data.frame(V1 = c("Sexo", "Sexo", "Cronico"),
V2 = c("Cronico", "Outcome", "Outcome"),
p = c(NA, NA, NA),
odds_ratio = c(NA, NA, NA),
ci_1 = c(NA, NA, NA),
ci_2 = c(NA, NA, NA))
# Sexo - cronico
fisher_sexo_cronico = fisher.test(dataset$Sexo, dataset$Cronico)
fisher$p[1] = fisher_sexo_cronico$p.value
fisher$odds_ratio[1] = fisher_sexo_cronico$estimate
fisher$ci_1[1] = fisher_sexo_cronico$conf.int[1]
fisher$ci_2[1] = fisher_sexo_cronico$conf.int[2]
# Sexo - outcome
fisher_sexo_outcome = fisher.test(dataset$Sexo, dataset$outcome)
fisher$p[2] = fisher_sexo_outcome$p.value
fisher$odds_ratio[2] = NA
fisher$ci_1[2] = NA
fisher$ci_2[2] = NA
# Cronico-outcome
fisher_cronico_outcome = fisher.test(dataset$Cronico, dataset$outcome)
fisher$p[3] = fisher_cronico_outcome$p.value
fisher$odds_ratio[3] = NA
fisher$ci_1[3] = NA
fisher$ci_2[3] = NA
View(fisher)
