writexl::write_xlsx(quantile_female,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/Sex/summary_female.xlsx")
rm(quantile_female, parametric_female)
# Prueba de Kolmogorov-Smirnov
ks_test = data.frame(variable = c("Sex","Age", "CCI"),
D= c(NA, NA, NA), p_value = c(NA, NA, NA))
ks_sex = ks.test(dataset_male$t_UCI_desc, dataset_female$t_UCI_desc)
ks_test$D[1] = ks_sex$statistic
ks_test$p_value[1] = ks_sex$p.value
dataset = dataset %>% mutate(group = cut(age,
breaks = c(18, 65, Inf),
include.lowest = TRUE,
right = FALSE))
# age1 == [18,65)
dataset_g1 = dataset %>% filter(group == "[18,65)")
parametric_g1 = fitdist(dataset_g1$t_UCI_desc, "gengamma.orig",
start = list(shape = 1, scale = 0.1, k = 1))
parametros_g1 = data.frame(estimate = parametric_g1$estimate,
sd = parametric_g1$sd)
writexl::write_xlsx(parametros_g1,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/Age/estimate_g1.xlsx")
quantile_g1 = data.frame(variable = c("Q1", "Q2", "Q3"),
distribution = c(NA, NA, NA),
CI_1 = c(NA, NA, NA),
CI_2 = c(NA, NA, NA),
sample = c(NA, NA, NA))
quantile_function = function(x){qgengamma.orig(x, shape = parametric_g1$estimate[1],
scale = parametric_g1$estimate[2],
k = parametric_g1$estimate[3])}
q = c(0.25,0.5,0.75)
for (k in 1:3) {
quantile_g1$distribution[k] = quantile_function(q[k])
quantile_g1$sample[k] = quantile(dataset_g1$t_UCI_desc, q[k])
}
writexl::write_xlsx(quantile_g1,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/Age/summary_g1.xlsx")
rm(quantile_g1, parametric_g1)
# age2 == [65,Inf)
dataset_g2 = dataset %>% filter(group == "[65,Inf]")
parametric_g2 = fitdist(dataset_g2$t_UCI_desc, "gengamma.orig",
start = list(shape = 1, scale = 0.1, k = 1))
parametros_g2 = data.frame(estimate = parametric_g2$estimate,
sd = parametric_g2$sd)
writexl::write_xlsx(parametros_g2,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/Age/estimate_g2.xlsx")
quantile_g2 = data.frame(variable = c("Q1", "Q2", "Q3"),
distribution = c(NA, NA, NA),
CI_1 = c(NA, NA, NA),
CI_2 = c(NA, NA, NA),
sample = c(NA, NA, NA))
quantile_function = function(x){qgengamma.orig(x, shape = parametric_g2$estimate[1],
scale = parametric_g2$estimate[2],
k = parametric_g2$estimate[3])}
q = c(0.25,0.5,0.75)
for (k in 1:3) {
quantile_g2$distribution[k] = quantile_function(q[k])
quantile_g2$sample[k] = quantile(dataset_g2$t_UCI_desc, q[k])
}
writexl::write_xlsx(quantile_g2,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/Age/summary_g2.xlsx")
rm(quantile_g2, parametric_g2)
# Prueba de Kolmogorov-Smirnov
ks_age = ks.test(dataset_g1$t_UCI_desc, dataset_g2$t_UCI_desc)
ks_test$D[2] = ks_age$statistic
ks_test$p_value[2] = ks_age$p.value
# group1 = CCI
dataset_CCI = dataset %>% filter(CCI == "CCI")
parametric_CCI = fitdist(dataset_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
parametros_CCI = data.frame(estimate = parametric_CCI$estimate,
sd = parametric_CCI$sd)
writexl::write_xlsx(parametros_CCI,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/estimate_CCI.xlsx")
quantile_CCI = data.frame(variable = c("Q1", "Q2", "Q3"),
distribution = c(NA, NA, NA),
CI_1 = c(NA, NA, NA),
CI_2 = c(NA, NA, NA),
sample = c(NA, NA, NA))
quantile_function = function(x){qgengamma.orig(x, shape = parametric_CCI$estimate[1],
scale = parametric_CCI$estimate[2],
k = parametric_CCI$estimate[3])}
q = c(0.25,0.5,0.75)
for (k in 1:3) {
quantile_CCI$distribution[k] = quantile_function(q[k])
quantile_CCI$sample[k] = quantile(dataset_CCI$t_UCI_desc, q[k])
}
writexl::write_xlsx(quantile_CCI,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/summary_CCI.xlsx")
rm(quantile_CCI, parametric_CCI)
# group2 = Non-CCI
dataset_non_CCI = dataset %>% filter(CCI == "non-CCI")
parametric_non_CCI = fitdist(dataset_non_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
parametros_non_CCI = data.frame(estimate = parametric_non_CCI$estimate,
sd = parametric_non_CCI$sd)
writexl::write_xlsx(parametros_non_CCI,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/estimate_non_CCI.xlsx")
quantile_non_CCI = data.frame(variable = c("Q1", "Q2", "Q3"),
distribution = c(NA, NA, NA),
CI_1 = c(NA, NA, NA),
CI_2 = c(NA, NA, NA),
sample = c(NA, NA, NA))
quantile_function = function(x){qgengamma.orig(x, shape = parametric_non_CCI$estimate[1],
scale = parametric_non_CCI$estimate[2],
k = parametric_non_CCI$estimate[3])}
q = c(0.25,0.5,0.75)
for (k in 1:3) {
quantile_non_CCI$distribution[k] = quantile_function(q[k])
quantile_non_CCI$sample[k] = quantile(dataset_non_CCI$t_UCI_desc, q[k])
}
writexl::write_xlsx(quantile_non_CCI,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/summary_non_CCI.xlsx")
rm(quantile_non_CCI, parametric_non_CCI)
# Kolmogorov-Smirnov test
ks_CCI = ks.test(dataset_CCI$t_UCI_desc, dataset_non_CCI$t_UCI_desc)
ks_test$D[3] = ks_CCI$statistic
ks_test$p_value[3] = ks_CCI$p.value
writexl::write_xlsx(ks_test,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/Kolmogorov_Smirnov_test.xlsx")
##########################################
## Anexo: figura para diferencias de la ##
##   distribuciÃ³n (CCI vs non-CCI)      ##
##########################################
gamma_CCI = fitdist(dataset_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
gamma_non_CCI = fitdist(dataset_non_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
ggplot(data = data.frame(x = c(0,300)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =parametric_CCI[1],
scale =parametric_CCI[2],
k = parametric_CCI[3]))
# group1 = CCI
dataset_CCI = dataset %>% filter(CCI == "CCI")
parametric_CCI = fitdist(dataset_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
parametros_CCI = data.frame(estimate = parametric_CCI$estimate,
sd = parametric_CCI$sd)
writexl::write_xlsx(parametros_CCI,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/estimate_CCI.xlsx")
quantile_CCI = data.frame(variable = c("Q1", "Q2", "Q3"),
distribution = c(NA, NA, NA),
CI_1 = c(NA, NA, NA),
CI_2 = c(NA, NA, NA),
sample = c(NA, NA, NA))
quantile_function = function(x){qgengamma.orig(x, shape = parametric_CCI$estimate[1],
scale = parametric_CCI$estimate[2],
k = parametric_CCI$estimate[3])}
q = c(0.25,0.5,0.75)
for (k in 1:3) {
quantile_CCI$distribution[k] = quantile_function(q[k])
quantile_CCI$sample[k] = quantile(dataset_CCI$t_UCI_desc, q[k])
}
writexl::write_xlsx(quantile_CCI,
"Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/summary_CCI.xlsx")
rm(quantile_CCI, parametric_CCI)
ggplot(data = data.frame(x = c(0,300)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =gamma_CCI[1],
scale =gamma_CCI[2],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(0,1)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =gamma_CCI[1],
scale =gamma_CCI[2],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(0,1)), aes (x=x)) + stat_function(fun = dgengamma.orig(),
args = list(shape =gamma_CCI[1],
scale =gamma_CCI[2],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(0,1)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =gamma_CCI[1],
scale =gamma_CCI[2],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(-1,1)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =gamma_CCI[1],
scale =gamma_CCI[2],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(-1,1)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =gamma_CCI[1],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(-1,1)), aes (x=x)) + stat_function(fun = dgengamma.orig,
args = list(shape =gamma_CCI[1],
k = gamma_CCI[3]))
ggplot(data = data.frame(x = c(-1,1)), aes (x=x)) + stat_function(fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,90)), aes (x=x)) + stat_function(fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,300)), aes (x=x)) + stat_function(fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,250)), aes (x=x)) + stat_function(fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,200)), aes (x=x)) + stat_function(fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,200)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(1,20)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(10,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(10,50)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(10,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(-90,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3])) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(-90,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "2.5")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]))
ggplot(data = data.frame(x = c(-90,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "2.5")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3])aes(colour = "0.5"))
ggplot(data = data.frame(x = c(-90,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "2.5")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "0.5"))
ggplot(data = data.frame(x = c(0,90)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "2.5")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "0.5"))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "2.5")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "0.5"))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI"))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(Group = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(Group = "Non-CCI"))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI"))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(fill = "Group")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.2), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.2,0.2), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.2), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.1), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.9), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal") + geom_line(aes(linetype = supp))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal") + geom_line(aes(linetype = c("CCI", "Non-CCI")))
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(colour = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(colour = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(colour = "Group") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group",
y = "",
x= "Time since admission to ICU (days)") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group",
y = "Density",
x= "Time since admission to ICU (days)") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group",
y = "Density",
x= "Time since admission to ICU (days)") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
png(file = "Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/Density, plot.png",
width = 558, height = 407)
gamma_CCI = fitdist(dataset_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
gamma_non_CCI = fitdist(dataset_non_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
dev.off()
gamma_CCI = fitdist(dataset_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
gamma_non_CCI = fitdist(dataset_non_CCI$t_UCI_desc, "gengamma.orig",
start = list(shape = 1.8, scale = 1, k = 1))
png(file = "Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/Density, plot.png",
width = 558, height = 407)
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group",
y = "Density",
x= "Time since admission to ICU (days)") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
dev.off()
png(file = "Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/Density, plot.png",
width = 458, height = 407)
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group",
y = "Density",
x= "Time since admission to ICU (days)") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
dev.off()
png(file = "Paper_resultados/Parametric_model/LoS/Output/Model_selection/CCI/Density, plot.png",
width = 400, height = 460)
ggplot(data = data.frame(x = c(1,100)), aes (x=x)) + stat_function(
fun = function(x)dgengamma.orig(x, shape = gamma_CCI$estimate[1],
scale = gamma_CCI$estimate[2],
k = gamma_CCI$estimate[3]), aes(linetype = "CCI")) + stat_function(
fun = function(x)dgengamma.orig(x,
shape = gamma_non_CCI$estimate[1],
scale = gamma_non_CCI$estimate[2],
k = gamma_non_CCI$estimate[3]), aes(linetype = "Non-CCI")) +labs(linetype = "Group",
y = "Density",
x= "Time since admission to ICU (days)") +
theme(legend.position = c(0.7,0.7), legend.direction = "horizontal")
dev.off()
